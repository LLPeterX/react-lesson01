{"version":3,"sources":["components/common/FormControls/FormControls.module.css","components/common/FormControls/FormControls.jsx","utils/validators/validators.js","hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","TextArea","props","input","restProps","meta","FormControl","Input","hasError","error","touched","className","styles","formControl","children","createField","placeholder","name","validators","component","text","type","validate","required","value","maxLength","textMaxLength","length","withAuthRedirect","Component","RedirectComponent","this","isAuth","to","React","connect","state","auth","DialogItem","s","dialog","active","id","Message","message","maxLength20","DialogFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","Dialogs","dialogsPage","dialogElements","usersData","map","e","key","messageElements","msgData","m","dialogs","dialogsItems","messages","formData","sendMessage","newMessageBody","compose","dispatch","sendMessageCreator","reset"],"mappings":"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","file":"static/js/6.b6148e83.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__YXCYV\",\"error\":\"FormControls_error__2KD-z\",\"formError\":\"FormControls_formError__35hOR\"};","import React from 'react'\r\nimport styles from './FormControls.module.css'\r\nimport {Field} from 'redux-form'\r\n\r\nexport const TextArea = (props) => {\r\n  // const hasError = meta.error && meta.touched;\r\n  // return (\r\n  //   <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n  //     <div>\r\n  //       <textarea {...input} {...props} />\r\n  //     </div>\r\n  //     {hasError && <span>{meta.error}</span>}\r\n  //   </div>\r\n  // )\r\n  const {input, meta, ...restProps} = props;\r\n  return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n  const {input, meta, ...restProps} = props;\r\n  return (\r\n    <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n  )\r\n}\r\n\r\nconst FormControl = ({ input, meta, ...props }) => {\r\n  const hasError = meta.error && meta.touched;\r\n  return (\r\n    <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n      <div>\r\n        {props.children}\r\n      </div>\r\n      {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n  ) \r\n}\r\n\r\n// Универсальное поле ввода\r\n// в props можно указать тип поля, напр. {type: \"password\"}\r\nexport const createField = (placeholder, name, validators, component, props={}, text=\"\") => (\r\n  <div><Field name={name} type=\"text\" placeholder={placeholder} component={component}\r\n  validate={validators} {...props}/>{text}</div>\r\n)","export const required = (value) => {\r\n  if(value) return undefined;\r\n  return \"Поле обязательно для заполнения\";\r\n};\r\n\r\nexport const maxLength20 = value => {\r\n  if(value && value.length>10) return 'Длина текста больше 50 символов';\r\n  return undefined;\r\n};\r\n\r\nexport const maxLength = (textMaxLength) => (value) => {\r\n  if(value && value.length > textMaxLength) return `Длина текста больше ${textMaxLength} символов`;\r\n  return undefined;\r\n};\r\n\r\n  ","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  \r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (this.props.isAuth)\r\n        return <Component {...this.props} />;\r\n      else\r\n        return <Redirect to='/login' />;\r\n    } // render\r\n  } // class\r\n  \r\n  let mapStateToPropsRedirect = (state) => ({ isAuth: state.auth.isAuth }); \r\n\r\n  let RedicrectedAuthComponent = connect(mapStateToPropsRedirect)(RedirectComponent);\r\n\r\n  return RedicrectedAuthComponent;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3afjN\",\"dialogsItems\":\"Dialogs_dialogsItems__2S_nM\",\"dialog\":\"Dialogs_dialog__3uBki\",\"active\":\"Dialogs_active__1g40H\",\"messages\":\"Dialogs_messages__PFwZn\",\"message\":\"Dialogs_message__2FZ5q\"};","import React from \"react\";\r\nimport s from '../Dialogs.module.css';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={`${s.dialog} ${s.active}`}>\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from '../Dialogs.module.css'; // импорт на уровень выше\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    );\r\n}\r\n\r\n\r\nexport default Message;","import React from 'react'\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { TextArea } from '../common/FormControls/FormControls';\r\nimport { required, maxLength } from '../../utils/validators/validators';\r\n\r\n\r\n// redux forms\r\nconst  maxLength20=maxLength(20);\r\n\r\nconst DialogForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field name={'newMessageBody'} placeholder=\"Введите свое сообщение\" component={TextArea} \r\n        validate={[required, maxLength20]}/>\r\n      </div>\r\n      <div>\r\n        <button>Добавить сообщение</button>\r\n      </div>\r\n    </form>\r\n\r\n  );\r\n}\r\n\r\nlet DialogFormRedux = reduxForm({form: 'dialogsForm'})(DialogForm);\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n  let dialogElements = state.usersData.map(e => <DialogItem name={e.name} key={e.id} id={e.id} />); // список юзеров\r\n  let messageElements = state.msgData.map(m => <Message message={m.message} key={m.id} />); // список нагих сообщений\r\n\r\n  if (!props.isAuth) return <Redirect to='/login' />;\r\n\r\n  let addMessage = (formData) => {\r\n    props.sendMessage(formData.newMessageBody);\r\n  }\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>\r\n        {dialogElements}\r\n      </div>\r\n      <div className={s.messages}>\r\n        {messageElements}\r\n      </div>\r\n\r\n      <DialogFormRedux onSubmit={addMessage}/>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dialogs;","import Dialogs from './Dialogs';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport {connect} from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { reset } from 'redux-form';\r\n\r\n\r\n// используем rect-redux\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // updateNewMessage: (text) => {\r\n    //   dispatch(updateNewMessageBodyCreator(text));\r\n    // },\r\n    sendMessage: (text) => {\r\n      dispatch(sendMessageCreator(text));\r\n      dispatch(reset('dialogsForm'));\r\n    }\r\n  };\r\n}\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n// const DialogsContainer = connect(mapStateToProps,mapDispatchToProps)(AuthRedirectComponent);\r\n// export default DialogsContainer;\r\n\r\nexport default compose(connect(mapStateToProps,mapDispatchToProps), withAuthRedirect)(Dialogs);\r\n\r\n"],"sourceRoot":""}